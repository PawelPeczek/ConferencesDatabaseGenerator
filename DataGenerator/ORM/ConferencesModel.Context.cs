//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataGenerator.ORM
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ConferencesModelContext : DbContext
    {
        public ConferencesModelContext()
            : base("name=ConferencesModelContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Clients> Clients { get; set; }
        public virtual DbSet<Conferences> Conferences { get; set; }
        public virtual DbSet<DaysOfConf> DaysOfConf { get; set; }
        public virtual DbSet<Orders> Orders { get; set; }
        public virtual DbSet<OrdersOnConfDays> OrdersOnConfDays { get; set; }
        public virtual DbSet<Participants> Participants { get; set; }
        public virtual DbSet<ParticipAtConfDay> ParticipAtConfDay { get; set; }
        public virtual DbSet<Payments> Payments { get; set; }
        public virtual DbSet<PriceThresholds> PriceThresholds { get; set; }
        public virtual DbSet<StudentCards> StudentCards { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<SysInfo> SysInfo { get; set; }
        public virtual DbSet<Workshops> Workshops { get; set; }
        public virtual DbSet<WorkshopsSubOrders> WorkshopsSubOrders { get; set; }
    
        [DbFunction("ConferencesModelContext", "GetValueOfAllOrders")]
        public virtual IQueryable<GetValueOfAllOrders_Result> GetValueOfAllOrders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetValueOfAllOrders_Result>("[ConferencesModelContext].[GetValueOfAllOrders]()");
        }
    
        [DbFunction("ConferencesModelContext", "ShowOrdersStatus")]
        public virtual IQueryable<ShowOrdersStatus_Result> ShowOrdersStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<ShowOrdersStatus_Result>("[ConferencesModelContext].[ShowOrdersStatus]()");
        }
    
        [DbFunction("ConferencesModelContext", "StatsOnConference")]
        public virtual IQueryable<StatsOnConference_Result> StatsOnConference(Nullable<int> conferenceID)
        {
            var conferenceIDParameter = conferenceID.HasValue ?
                new ObjectParameter("ConferenceID", conferenceID) :
                new ObjectParameter("ConferenceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<StatsOnConference_Result>("[ConferencesModelContext].[StatsOnConference](@ConferenceID)", conferenceIDParameter);
        }
    
        [DbFunction("ConferencesModelContext", "StatsOnConferences")]
        public virtual IQueryable<StatsOnConferences_Result> StatsOnConferences()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<StatsOnConferences_Result>("[ConferencesModelContext].[StatsOnConferences]()");
        }
    
        [DbFunction("ConferencesModelContext", "StatsOnWorkshopsAtConference")]
        public virtual IQueryable<StatsOnWorkshopsAtConference_Result> StatsOnWorkshopsAtConference(Nullable<int> conferenceID)
        {
            var conferenceIDParameter = conferenceID.HasValue ?
                new ObjectParameter("ConferenceID", conferenceID) :
                new ObjectParameter("ConferenceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<StatsOnWorkshopsAtConference_Result>("[ConferencesModelContext].[StatsOnWorkshopsAtConference](@ConferenceID)", conferenceIDParameter);
        }
    
        public virtual int AssignParticipantAtConfDay(Nullable<int> ordOnConfDayID, Nullable<int> participantID)
        {
            var ordOnConfDayIDParameter = ordOnConfDayID.HasValue ?
                new ObjectParameter("OrdOnConfDayID", ordOnConfDayID) :
                new ObjectParameter("OrdOnConfDayID", typeof(int));
    
            var participantIDParameter = participantID.HasValue ?
                new ObjectParameter("ParticipantID", participantID) :
                new ObjectParameter("ParticipantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AssignParticipantAtConfDay", ordOnConfDayIDParameter, participantIDParameter);
        }
    
        public virtual int AssignParticipantsAtConfDay(Nullable<int> ordOnConfDayID)
        {
            var ordOnConfDayIDParameter = ordOnConfDayID.HasValue ?
                new ObjectParameter("OrdOnConfDayID", ordOnConfDayID) :
                new ObjectParameter("OrdOnConfDayID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AssignParticipantsAtConfDay", ordOnConfDayIDParameter);
        }
    
        public virtual int AssignParticipantsAtWorkshops()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AssignParticipantsAtWorkshops");
        }
    
        public virtual int AssignParticipantToWorkshop(Nullable<int> entryID, Nullable<int> workshopSubOrderID)
        {
            var entryIDParameter = entryID.HasValue ?
                new ObjectParameter("EntryID", entryID) :
                new ObjectParameter("EntryID", typeof(int));
    
            var workshopSubOrderIDParameter = workshopSubOrderID.HasValue ?
                new ObjectParameter("WorkshopSubOrderID", workshopSubOrderID) :
                new ObjectParameter("WorkshopSubOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AssignParticipantToWorkshop", entryIDParameter, workshopSubOrderIDParameter);
        }
    
        public virtual int AssociateStudentCard(Nullable<int> participantID, string studentCardNumber, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var participantIDParameter = participantID.HasValue ?
                new ObjectParameter("ParticipantID", participantID) :
                new ObjectParameter("ParticipantID", typeof(int));
    
            var studentCardNumberParameter = studentCardNumber != null ?
                new ObjectParameter("StudentCardNumber", studentCardNumber) :
                new ObjectParameter("StudentCardNumber", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AssociateStudentCard", participantIDParameter, studentCardNumberParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int BatchCreateCompanyCust()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BatchCreateCompanyCust");
        }
    
        public virtual int BatchCreateIndivudualCust()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BatchCreateIndivudualCust");
        }
    
        public virtual int BatchInsertPayments()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BatchInsertPayments");
        }
    
        public virtual int ChangeCompanyClient(Nullable<int> clientID, string login, string password, string email, string phoneNumber, string companyName, string fax, string nIP, string contactPersonName, string contactPersonSurname)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var nIPParameter = nIP != null ?
                new ObjectParameter("NIP", nIP) :
                new ObjectParameter("NIP", typeof(string));
    
            var contactPersonNameParameter = contactPersonName != null ?
                new ObjectParameter("ContactPersonName", contactPersonName) :
                new ObjectParameter("ContactPersonName", typeof(string));
    
            var contactPersonSurnameParameter = contactPersonSurname != null ?
                new ObjectParameter("ContactPersonSurname", contactPersonSurname) :
                new ObjectParameter("ContactPersonSurname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangeCompanyClient", clientIDParameter, loginParameter, passwordParameter, emailParameter, phoneNumberParameter, companyNameParameter, faxParameter, nIPParameter, contactPersonNameParameter, contactPersonSurnameParameter);
        }
    
        public virtual int ChangeIndivClientData(Nullable<int> clientID, string login, string password, string email, string phoneNumber, string pESEL, string name, string surname)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var pESELParameter = pESEL != null ?
                new ObjectParameter("PESEL", pESEL) :
                new ObjectParameter("PESEL", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangeIndivClientData", clientIDParameter, loginParameter, passwordParameter, emailParameter, phoneNumberParameter, pESELParameter, nameParameter, surnameParameter);
        }
    
        public virtual int ChangeNumbOfSeatsAtOrdOnConfDay(Nullable<int> ordOnConfDay, Nullable<short> numberOfRegSeats, Nullable<short> numberOfStudentsSeats)
        {
            var ordOnConfDayParameter = ordOnConfDay.HasValue ?
                new ObjectParameter("OrdOnConfDay", ordOnConfDay) :
                new ObjectParameter("OrdOnConfDay", typeof(int));
    
            var numberOfRegSeatsParameter = numberOfRegSeats.HasValue ?
                new ObjectParameter("NumberOfRegSeats", numberOfRegSeats) :
                new ObjectParameter("NumberOfRegSeats", typeof(short));
    
            var numberOfStudentsSeatsParameter = numberOfStudentsSeats.HasValue ?
                new ObjectParameter("NumberOfStudentsSeats", numberOfStudentsSeats) :
                new ObjectParameter("NumberOfStudentsSeats", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangeNumbOfSeatsAtOrdOnConfDay", ordOnConfDayParameter, numberOfRegSeatsParameter, numberOfStudentsSeatsParameter);
        }
    
        public virtual int ChangeNumbOfSeatsAtWorkshopSubOrd(Nullable<int> workshopSubOrderID, Nullable<short> numberOfSeats)
        {
            var workshopSubOrderIDParameter = workshopSubOrderID.HasValue ?
                new ObjectParameter("WorkshopSubOrderID", workshopSubOrderID) :
                new ObjectParameter("WorkshopSubOrderID", typeof(int));
    
            var numberOfSeatsParameter = numberOfSeats.HasValue ?
                new ObjectParameter("NumberOfSeats", numberOfSeats) :
                new ObjectParameter("NumberOfSeats", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangeNumbOfSeatsAtWorkshopSubOrd", workshopSubOrderIDParameter, numberOfSeatsParameter);
        }
    
        public virtual int ChangeParticipantData(Nullable<int> participantID, string email, string pESEL, string name, string surname)
        {
            var participantIDParameter = participantID.HasValue ?
                new ObjectParameter("ParticipantID", participantID) :
                new ObjectParameter("ParticipantID", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var pESELParameter = pESEL != null ?
                new ObjectParameter("PESEL", pESEL) :
                new ObjectParameter("PESEL", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangeParticipantData", participantIDParameter, emailParameter, pESELParameter, nameParameter, surnameParameter);
        }
    
        public virtual int ChangeStatusOfOrder(Nullable<int> orderID, Nullable<bool> status)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangeStatusOfOrder", orderIDParameter, statusParameter);
        }
    
        public virtual int CreateCompanyClient(string login, string password, string email, string phoneNumber, string companyName, string fax, string nIP, string contactPersonName, string contactPersonSurname)
        {
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var companyNameParameter = companyName != null ?
                new ObjectParameter("CompanyName", companyName) :
                new ObjectParameter("CompanyName", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var nIPParameter = nIP != null ?
                new ObjectParameter("NIP", nIP) :
                new ObjectParameter("NIP", typeof(string));
    
            var contactPersonNameParameter = contactPersonName != null ?
                new ObjectParameter("ContactPersonName", contactPersonName) :
                new ObjectParameter("ContactPersonName", typeof(string));
    
            var contactPersonSurnameParameter = contactPersonSurname != null ?
                new ObjectParameter("ContactPersonSurname", contactPersonSurname) :
                new ObjectParameter("ContactPersonSurname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateCompanyClient", loginParameter, passwordParameter, emailParameter, phoneNumberParameter, companyNameParameter, faxParameter, nIPParameter, contactPersonNameParameter, contactPersonSurnameParameter);
        }
    
        public virtual int CreateConference(string confName, string confTopic, string confDescription, Nullable<float> studentDiscount)
        {
            var confNameParameter = confName != null ?
                new ObjectParameter("ConfName", confName) :
                new ObjectParameter("ConfName", typeof(string));
    
            var confTopicParameter = confTopic != null ?
                new ObjectParameter("ConfTopic", confTopic) :
                new ObjectParameter("ConfTopic", typeof(string));
    
            var confDescriptionParameter = confDescription != null ?
                new ObjectParameter("ConfDescription", confDescription) :
                new ObjectParameter("ConfDescription", typeof(string));
    
            var studentDiscountParameter = studentDiscount.HasValue ?
                new ObjectParameter("StudentDiscount", studentDiscount) :
                new ObjectParameter("StudentDiscount", typeof(float));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateConference", confNameParameter, confTopicParameter, confDescriptionParameter, studentDiscountParameter);
        }
    
        public virtual int CreateDayOfConf(Nullable<int> confID, Nullable<System.DateTime> date, Nullable<short> spaceLimit, Nullable<System.DateTime> endDate, Nullable<decimal> value)
        {
            var confIDParameter = confID.HasValue ?
                new ObjectParameter("ConfID", confID) :
                new ObjectParameter("ConfID", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var spaceLimitParameter = spaceLimit.HasValue ?
                new ObjectParameter("SpaceLimit", spaceLimit) :
                new ObjectParameter("SpaceLimit", typeof(short));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateDayOfConf", confIDParameter, dateParameter, spaceLimitParameter, endDateParameter, valueParameter);
        }
    
        public virtual int CreateIndivudualCust(string login, string password, string email, string phoneNumber, string pESEL, string name, string surname, string studentCardNumber, Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var pESELParameter = pESEL != null ?
                new ObjectParameter("PESEL", pESEL) :
                new ObjectParameter("PESEL", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var studentCardNumberParameter = studentCardNumber != null ?
                new ObjectParameter("StudentCardNumber", studentCardNumber) :
                new ObjectParameter("StudentCardNumber", typeof(string));
    
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateIndivudualCust", loginParameter, passwordParameter, emailParameter, phoneNumberParameter, pESELParameter, nameParameter, surnameParameter, studentCardNumberParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual int CreateOrder(Nullable<int> clientID, Nullable<System.DateTime> dateOfBook, Nullable<int> dayOfConfID, Nullable<short> numberOfRegularSeats, Nullable<short> numberOfStudentSeats)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var dateOfBookParameter = dateOfBook.HasValue ?
                new ObjectParameter("DateOfBook", dateOfBook) :
                new ObjectParameter("DateOfBook", typeof(System.DateTime));
    
            var dayOfConfIDParameter = dayOfConfID.HasValue ?
                new ObjectParameter("DayOfConfID", dayOfConfID) :
                new ObjectParameter("DayOfConfID", typeof(int));
    
            var numberOfRegularSeatsParameter = numberOfRegularSeats.HasValue ?
                new ObjectParameter("NumberOfRegularSeats", numberOfRegularSeats) :
                new ObjectParameter("NumberOfRegularSeats", typeof(short));
    
            var numberOfStudentSeatsParameter = numberOfStudentSeats.HasValue ?
                new ObjectParameter("NumberOfStudentSeats", numberOfStudentSeats) :
                new ObjectParameter("NumberOfStudentSeats", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateOrder", clientIDParameter, dateOfBookParameter, dayOfConfIDParameter, numberOfRegularSeatsParameter, numberOfStudentSeatsParameter);
        }
    
        public virtual int CreateOrderBatch(Nullable<int> clientID, Nullable<System.DateTime> dateOfBook)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var dateOfBookParameter = dateOfBook.HasValue ?
                new ObjectParameter("DateOfBook", dateOfBook) :
                new ObjectParameter("DateOfBook", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateOrderBatch", clientIDParameter, dateOfBookParameter);
        }
    
        public virtual int CreatePriceThreshold(Nullable<int> confDayID, Nullable<System.DateTime> endDate, Nullable<decimal> value)
        {
            var confDayIDParameter = confDayID.HasValue ?
                new ObjectParameter("ConfDayID", confDayID) :
                new ObjectParameter("ConfDayID", typeof(int));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreatePriceThreshold", confDayIDParameter, endDateParameter, valueParameter);
        }
    
        public virtual int CreateWorkshop(Nullable<int> dayOfConfID, string name, Nullable<decimal> value, Nullable<System.TimeSpan> startTime, Nullable<System.TimeSpan> endTime, Nullable<short> spaceLimit, string teacherName, string teacherSurname)
        {
            var dayOfConfIDParameter = dayOfConfID.HasValue ?
                new ObjectParameter("DayOfConfID", dayOfConfID) :
                new ObjectParameter("DayOfConfID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(decimal));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.TimeSpan));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.TimeSpan));
    
            var spaceLimitParameter = spaceLimit.HasValue ?
                new ObjectParameter("SpaceLimit", spaceLimit) :
                new ObjectParameter("SpaceLimit", typeof(short));
    
            var teacherNameParameter = teacherName != null ?
                new ObjectParameter("TeacherName", teacherName) :
                new ObjectParameter("TeacherName", typeof(string));
    
            var teacherSurnameParameter = teacherSurname != null ?
                new ObjectParameter("TeacherSurname", teacherSurname) :
                new ObjectParameter("TeacherSurname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateWorkshop", dayOfConfIDParameter, nameParameter, valueParameter, startTimeParameter, endTimeParameter, spaceLimitParameter, teacherNameParameter, teacherSurnameParameter);
        }
    
        public virtual int DeleteConfDay(Nullable<int> dayOfConfID)
        {
            var dayOfConfIDParameter = dayOfConfID.HasValue ?
                new ObjectParameter("DayOfConfID", dayOfConfID) :
                new ObjectParameter("DayOfConfID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteConfDay", dayOfConfIDParameter);
        }
    
        public virtual int DeleteOrder(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteOrder", orderIDParameter);
        }
    
        public virtual int DeleteOrdOnConfDayFromOrder(Nullable<int> ordOnConfDayID)
        {
            var ordOnConfDayIDParameter = ordOnConfDayID.HasValue ?
                new ObjectParameter("OrdOnConfDayID", ordOnConfDayID) :
                new ObjectParameter("OrdOnConfDayID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteOrdOnConfDayFromOrder", ordOnConfDayIDParameter);
        }
    
        public virtual int DeleteParticipantByClient(Nullable<int> clientID, Nullable<int> participantID)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var participantIDParameter = participantID.HasValue ?
                new ObjectParameter("ParticipantID", participantID) :
                new ObjectParameter("ParticipantID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteParticipantByClient", clientIDParameter, participantIDParameter);
        }
    
        public virtual int DeleteParticipantFromConfDay(Nullable<int> entryID)
        {
            var entryIDParameter = entryID.HasValue ?
                new ObjectParameter("EntryID", entryID) :
                new ObjectParameter("EntryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteParticipantFromConfDay", entryIDParameter);
        }
    
        public virtual int DeleteParticipantFromWorkshop(Nullable<int> entryID, Nullable<int> workshopSubOrderID)
        {
            var entryIDParameter = entryID.HasValue ?
                new ObjectParameter("EntryID", entryID) :
                new ObjectParameter("EntryID", typeof(int));
    
            var workshopSubOrderIDParameter = workshopSubOrderID.HasValue ?
                new ObjectParameter("WorkshopSubOrderID", workshopSubOrderID) :
                new ObjectParameter("WorkshopSubOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteParticipantFromWorkshop", entryIDParameter, workshopSubOrderIDParameter);
        }
    
        public virtual int DeleteStudentCard(Nullable<int> studentCardID)
        {
            var studentCardIDParameter = studentCardID.HasValue ?
                new ObjectParameter("StudentCardID", studentCardID) :
                new ObjectParameter("StudentCardID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteStudentCard", studentCardIDParameter);
        }
    
        public virtual int DeleteWorkshop(Nullable<int> workshopID)
        {
            var workshopIDParameter = workshopID.HasValue ?
                new ObjectParameter("WorkshopID", workshopID) :
                new ObjectParameter("WorkshopID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteWorkshop", workshopIDParameter);
        }
    
        public virtual int DeleteWorkshopSubOrder(Nullable<int> workshopSubOrderID)
        {
            var workshopSubOrderIDParameter = workshopSubOrderID.HasValue ?
                new ObjectParameter("WorkshopSubOrderID", workshopSubOrderID) :
                new ObjectParameter("WorkshopSubOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteWorkshopSubOrder", workshopSubOrderIDParameter);
        }
    
        public virtual int EditConference(Nullable<int> confID, string confName, string confTopic, string confDescription, Nullable<float> studentDiscount)
        {
            var confIDParameter = confID.HasValue ?
                new ObjectParameter("ConfID", confID) :
                new ObjectParameter("ConfID", typeof(int));
    
            var confNameParameter = confName != null ?
                new ObjectParameter("ConfName", confName) :
                new ObjectParameter("ConfName", typeof(string));
    
            var confTopicParameter = confTopic != null ?
                new ObjectParameter("ConfTopic", confTopic) :
                new ObjectParameter("ConfTopic", typeof(string));
    
            var confDescriptionParameter = confDescription != null ?
                new ObjectParameter("ConfDescription", confDescription) :
                new ObjectParameter("ConfDescription", typeof(string));
    
            var studentDiscountParameter = studentDiscount.HasValue ?
                new ObjectParameter("StudentDiscount", studentDiscount) :
                new ObjectParameter("StudentDiscount", typeof(float));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditConference", confIDParameter, confNameParameter, confTopicParameter, confDescriptionParameter, studentDiscountParameter);
        }
    
        public virtual int EditDayOfConf(Nullable<int> dayOfConfID, Nullable<System.DateTime> date, Nullable<short> spaceLimit)
        {
            var dayOfConfIDParameter = dayOfConfID.HasValue ?
                new ObjectParameter("DayOfConfID", dayOfConfID) :
                new ObjectParameter("DayOfConfID", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var spaceLimitParameter = spaceLimit.HasValue ?
                new ObjectParameter("SpaceLimit", spaceLimit) :
                new ObjectParameter("SpaceLimit", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditDayOfConf", dayOfConfIDParameter, dateParameter, spaceLimitParameter);
        }
    
        public virtual int EditPriceThreshold(Nullable<int> priceThresholdID, Nullable<System.DateTime> endDate, Nullable<decimal> value)
        {
            var priceThresholdIDParameter = priceThresholdID.HasValue ?
                new ObjectParameter("PriceThresholdID", priceThresholdID) :
                new ObjectParameter("PriceThresholdID", typeof(int));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditPriceThreshold", priceThresholdIDParameter, endDateParameter, valueParameter);
        }
    
        public virtual int EditWorkshop(Nullable<int> workshopID, string name, Nullable<decimal> value, Nullable<System.TimeSpan> startTime, Nullable<System.TimeSpan> endTime, Nullable<short> spaceLimit, string teacherName, string teacherSurname)
        {
            var workshopIDParameter = workshopID.HasValue ?
                new ObjectParameter("WorkshopID", workshopID) :
                new ObjectParameter("WorkshopID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(decimal));
    
            var startTimeParameter = startTime.HasValue ?
                new ObjectParameter("StartTime", startTime) :
                new ObjectParameter("StartTime", typeof(System.TimeSpan));
    
            var endTimeParameter = endTime.HasValue ?
                new ObjectParameter("EndTime", endTime) :
                new ObjectParameter("EndTime", typeof(System.TimeSpan));
    
            var spaceLimitParameter = spaceLimit.HasValue ?
                new ObjectParameter("SpaceLimit", spaceLimit) :
                new ObjectParameter("SpaceLimit", typeof(short));
    
            var teacherNameParameter = teacherName != null ?
                new ObjectParameter("TeacherName", teacherName) :
                new ObjectParameter("TeacherName", typeof(string));
    
            var teacherSurnameParameter = teacherSurname != null ?
                new ObjectParameter("TeacherSurname", teacherSurname) :
                new ObjectParameter("TeacherSurname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditWorkshop", workshopIDParameter, nameParameter, valueParameter, startTimeParameter, endTimeParameter, spaceLimitParameter, teacherNameParameter, teacherSurnameParameter);
        }
    
        public virtual int InsertParticipant(Nullable<int> clientID, string email, string pESEL, string name, string surname)
        {
            var clientIDParameter = clientID.HasValue ?
                new ObjectParameter("ClientID", clientID) :
                new ObjectParameter("ClientID", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var pESELParameter = pESEL != null ?
                new ObjectParameter("PESEL", pESEL) :
                new ObjectParameter("PESEL", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertParticipant", clientIDParameter, emailParameter, pESELParameter, nameParameter, surnameParameter);
        }
    
        public virtual int InsertPayment(Nullable<int> orderID, Nullable<decimal> value, string accountNumber, string titleOfPayment, string transferSender, Nullable<System.DateTime> date)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(decimal));
    
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(string));
    
            var titleOfPaymentParameter = titleOfPayment != null ?
                new ObjectParameter("TitleOfPayment", titleOfPayment) :
                new ObjectParameter("TitleOfPayment", typeof(string));
    
            var transferSenderParameter = transferSender != null ?
                new ObjectParameter("TransferSender", transferSender) :
                new ObjectParameter("TransferSender", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertPayment", orderIDParameter, valueParameter, accountNumberParameter, titleOfPaymentParameter, transferSenderParameter, dateParameter);
        }
    
        public virtual int InsertWorkshopSubOrder(Nullable<int> orderOnConfDayID, Nullable<int> workshopID, Nullable<short> numberOfSeats)
        {
            var orderOnConfDayIDParameter = orderOnConfDayID.HasValue ?
                new ObjectParameter("OrderOnConfDayID", orderOnConfDayID) :
                new ObjectParameter("OrderOnConfDayID", typeof(int));
    
            var workshopIDParameter = workshopID.HasValue ?
                new ObjectParameter("WorkshopID", workshopID) :
                new ObjectParameter("WorkshopID", typeof(int));
    
            var numberOfSeatsParameter = numberOfSeats.HasValue ?
                new ObjectParameter("NumberOfSeats", numberOfSeats) :
                new ObjectParameter("NumberOfSeats", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertWorkshopSubOrder", orderOnConfDayIDParameter, workshopIDParameter, numberOfSeatsParameter);
        }
    
        public virtual int InsertWorkshopSubOrderBatch(Nullable<int> orderOnConfDayID)
        {
            var orderOnConfDayIDParameter = orderOnConfDayID.HasValue ?
                new ObjectParameter("OrderOnConfDayID", orderOnConfDayID) :
                new ObjectParameter("OrderOnConfDayID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertWorkshopSubOrderBatch", orderOnConfDayIDParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int UpdateOrderStatus()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOrderStatus");
        }
    
        public virtual int UpdateSysInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSysInfo");
        }
    }
}
