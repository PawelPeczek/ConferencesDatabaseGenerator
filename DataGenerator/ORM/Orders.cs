//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataGenerator.ORM
{
    using System;
    using System.Collections.Generic;
    
    public partial class Orders
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Orders()
        {
            this.OrdersOnConfDays = new HashSet<OrdersOnConfDays>();
            this.Payments = new HashSet<Payments>();
        }
    
        public int OrderID { get; set; }
        public int ClientID { get; set; }
        public System.DateTime DateOfBook { get; set; }
        public bool Status { get; set; }
    
        public virtual Clients Clients { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OrdersOnConfDays> OrdersOnConfDays { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Payments> Payments { get; set; }

        public decimal CountValue() {
            decimal res = 0;
            foreach(OrdersOnConfDays oocd in OrdersOnConfDays) {
                decimal UnitPrice = oocd.DaysOfConf.PriceThresholdForDate(DateOfBook);
                Console.WriteLine($"Counting for S: {oocd.NumberOfStudentSeats} and R: {oocd.NumberOfRegularSeats}");
                res += oocd.NumberOfRegularSeats * UnitPrice +
                    oocd.NumberOfStudentSeats * (1 - (decimal)oocd.DaysOfConf.GetStudentDiscount()) * UnitPrice;
                foreach(WorkshopsSubOrders wso in oocd.WorkshopsSubOrders) {
                    res += wso.NumberOfSeats * wso.Workshops.Value;
                }
            }
            Console.WriteLine($"Summary: {res}");
            return res;
        }
    }
}
